[gd_scene load_steps=4 format=3 uid="uid://bo4xu3h0hcojs"]

[sub_resource type="GDScript" id="GDScript_m8ltu"]
script/source = "extends CharacterBody3D

@onready var camera = %Camera3D
@onready var head = $Head

var speed
const WALK_SPEED = 5.0
const SPRINT_SPEED = 10.0
const CROUCH_SPEED = 3.0
const JUMP_VELOCITY = 4.5
const SENSITIVITY = 0.005


# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = 9.8

# head bob
const BOB_FREQ = 2.0
const BOB_AMP = 0.08
var t_bob = 0.0

func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)

func _unhandled_input(event):
	if event is InputEventMouseMotion:
		head.rotate_y(-event.relative.x * SENSITIVITY)
		camera.rotate_x(-event.relative.y * SENSITIVITY)
		camera.rotation.x = clamp(camera.rotation.x, deg_to_rad(-40), deg_to_rad(60))
		


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
		
	if Input.is_action_pressed(\"close\"):
		get_tree().free
		
	if Input.is_action_pressed(\"sprint\"):
		speed = SPRINT_SPEED
	else:
		speed = WALK_SPEED

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"left\", \"right\", \"up\", \"down\")
	var direction = (head.transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if is_on_floor():
		if direction:
			velocity.x = direction.x * speed
			velocity.z = direction.z * speed
		else:
			velocity.x = 0.0
			velocity.z = 0.0
	else:
		velocity.x = lerp(velocity.x, direction.x * speed, delta * 7.0)
		velocity.z = lerp(velocity.z, direction.z * speed, delta * 7.0)
	t_bob += delta * velocity.length() * float(is_on_floor())
	camera.transform.origin = _headbob(t_bob)

	move_and_slide()
	
func _headbob(time) -> Vector3:
	var pos = Vector3.ZERO
	pos.y = sin(time*BOB_FREQ) * BOB_AMP
	pos.x = cos(time*BOB_FREQ / 2) * BOB_AMP
	return pos
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_jx0nl"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_jrcsa"]

[node name="player" type="CharacterBody3D"]
script = SubResource("GDScript_m8ltu")

[node name="Head" type="Node3D" parent="."]

[node name="Camera3D" type="Camera3D" parent="Head"]
unique_name_in_owner = true
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.006, 0, -0.179)
fov = 90.0

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("CapsuleMesh_jx0nl")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_jrcsa")
